{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.28.1.47646",
      "templateHash": "16098944643009149821"
    }
  },
  "parameters": {
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "The location of all resources"
      }
    },
    "hubNetworkName": {
      "type": "string",
      "defaultValue": "Hub1",
      "metadata": {
        "description": "The name of the Hub network"
      }
    },
    "hubNetworkPrefix": {
      "type": "string",
      "defaultValue": "10.0.0.0/16",
      "metadata": {
        "description": "The address prefix of the Hub network"
      }
    },
    "bastionHostName": {
      "type": "string",
      "defaultValue": "hubBastion",
      "metadata": {
        "description": "The name of the Bastion host"
      }
    },
    "bastionSubnetName": {
      "type": "string",
      "defaultValue": "AzureBastionSubnet",
      "metadata": {
        "description": "Hub network Bastion subnet name"
      }
    },
    "bastionSubnetIpPrefix": {
      "type": "string",
      "defaultValue": "10.0.0.0/26",
      "metadata": {
        "description": "Bastion subnet IP prefix MUST be within vnet IP prefix address space"
      }
    },
    "bastionPIP": {
      "type": "string",
      "defaultValue": "Bastion-PIP",
      "metadata": {
        "description": "Bastion PIP Name"
      }
    },
    "hubSubnet1Name": {
      "type": "string",
      "defaultValue": "Subnet1",
      "metadata": {
        "description": "Hubnet network vm subnet name"
      }
    },
    "hubSubnet1AddressPrefix": {
      "type": "string",
      "defaultValue": "10.0.1.0/24",
      "metadata": {
        "description": "Subnet1 address prefix"
      }
    },
    "spoke1NetworkName": {
      "type": "string",
      "defaultValue": "Spoke1",
      "metadata": {
        "description": "Spoke1 network name"
      }
    },
    "spokeAddressPrefix": {
      "type": "string",
      "defaultValue": "10.1.0.0/16",
      "metadata": {
        "description": "Spoke network address prefix"
      }
    },
    "spoke1Subnet1Name": {
      "type": "string",
      "defaultValue": "Subnet1",
      "metadata": {
        "description": "Spoke network subnet1 name"
      }
    },
    "spoke1Subnet1Prefix": {
      "type": "string",
      "defaultValue": "10.1.1.0/24",
      "metadata": {
        "description": "Spoke1 subnet1 address prefix"
      }
    },
    "hubSubNSGName": {
      "type": "string",
      "defaultValue": "Hub-Subnet1-NSG",
      "metadata": {
        "description": "Hub subnet1 NSG name"
      }
    },
    "spokeSubNSGName": {
      "type": "string",
      "defaultValue": "Spoke1-Subnet1-NSG",
      "metadata": {
        "description": "Spoke1 subnet1 NSG name"
      }
    },
    "hubUbuntuName": {
      "type": "string",
      "defaultValue": "Hub-vm",
      "metadata": {
        "description": "Hub Ubuntu vm name"
      }
    },
    "spokeUbuntuName": {
      "type": "string",
      "defaultValue": "Spoke-vm",
      "metadata": {
        "description": "Spoke Ubuntu vm name"
      }
    },
    "OSVersion": {
      "type": "string",
      "defaultValue": "20_04-lts-gen2",
      "allowedValues": [
        "16_04-lts-gen2",
        "20_04-lts-gen2",
        "22_04-lts-gen2"
      ],
      "metadata": {
        "description": "The Ubuntu Sku for the VM."
      }
    },
    "vmSize": {
      "type": "string",
      "defaultValue": "Standard_B1ms",
      "metadata": {
        "description": "Size of the virtual machine."
      }
    },
    "securityType": {
      "type": "string",
      "defaultValue": "Standard",
      "allowedValues": [
        "Standard",
        "TrustedLaunch"
      ],
      "metadata": {
        "description": "Security Type of the Virtual Machine."
      }
    },
    "authenticationType": {
      "type": "string",
      "defaultValue": "password",
      "allowedValues": [
        "sshPublicKey",
        "password"
      ],
      "metadata": {
        "description": "Type of authentication to use on the Virtual Machine. SSH key is recommended."
      }
    },
    "userName": {
      "type": "string",
      "metadata": {
        "description": "VMs Admin Username"
      }
    },
    "adminPassword": {
      "type": "securestring",
      "minLength": 12,
      "metadata": {
        "description": "Admin Account for VMs password"
      }
    }
  },
  "variables": {
    "linuxConfiguration": {
      "disablePasswordAuthentication": true,
      "ssh": {
        "publicKeys": [
          {
            "path": "[format('/home/{0}/.ssh/authorized_keys', parameters('userName'))]",
            "keyData": null
          }
        ]
      }
    },
    "securityProfileJson": {
      "uefiSettings": {
        "secureBootEnabled": true,
        "vTpmEnabled": true
      },
      "securityType": "[parameters('securityType')]"
    }
  },
  "resources": [
    {
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2023-11-01",
      "name": "[parameters('hubNetworkName')]",
      "location": "[parameters('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[parameters('hubNetworkPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[parameters('bastionSubnetName')]",
            "properties": {
              "addressPrefix": "[parameters('bastionSubnetIpPrefix')]"
            }
          },
          {
            "name": "[parameters('hubSubnet1Name')]",
            "properties": {
              "addressPrefix": "[parameters('hubSubnet1AddressPrefix')]",
              "networkSecurityGroup": {
                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('hubSubNSGName'))]"
              }
            }
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('hubSubNSGName'))]"
      ]
    },
    {
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2023-11-01",
      "name": "[parameters('spoke1NetworkName')]",
      "location": "[parameters('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[parameters('spokeAddressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[parameters('spoke1Subnet1Name')]",
            "properties": {
              "addressPrefix": "[parameters('spoke1Subnet1Prefix')]",
              "networkSecurityGroup": {
                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('spokeSubNSGName'))]"
              }
            }
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('spokeSubNSGName'))]"
      ]
    },
    {
      "type": "Microsoft.Network/bastionHosts",
      "apiVersion": "2023-11-01",
      "name": "[parameters('bastionHostName')]",
      "location": "[parameters('location')]",
      "properties": {
        "ipConfigurations": [
          {
            "name": "IpConf",
            "properties": {
              "subnet": {
                "id": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('hubNetworkName')), '2023-11-01').subnets[0].id]"
              },
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('bastionPIP'))]"
              }
            }
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', parameters('hubNetworkName'))]",
        "[resourceId('Microsoft.Network/publicIPAddresses', parameters('bastionPIP'))]"
      ]
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "2023-11-01",
      "name": "[parameters('bastionPIP')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Standard"
      },
      "properties": {
        "publicIPAllocationMethod": "Static"
      }
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2023-11-01",
      "name": "[parameters('hubSubNSGName')]",
      "location": "[parameters('location')]",
      "properties": {
        "securityRules": [
          {
            "name": "nsgRule1",
            "properties": {
              "description": "description",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "10.0.0.0/26",
              "access": "Allow",
              "priority": 1000,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2023-11-01",
      "name": "[parameters('spokeSubNSGName')]",
      "location": "[parameters('location')]",
      "properties": {
        "securityRules": [
          {
            "name": "nsgRule",
            "properties": {
              "description": "description",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "10.0.0.0/26",
              "access": "Allow",
              "priority": 1000,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2023-11-01",
      "name": "Hub-vm-nic",
      "location": "[parameters('location')]",
      "properties": {
        "ipConfigurations": [
          {
            "name": "Ipconfig",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('hubNetworkName')), '2023-11-01').subnets[1].id]"
              }
            }
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', parameters('hubNetworkName'))]"
      ]
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2023-11-01",
      "name": "Spoke-vm-nic",
      "location": "[parameters('location')]",
      "properties": {
        "ipConfigurations": [
          {
            "name": "Ipconfig",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('spoke1NetworkName')), '2023-11-01').subnets[0].id]"
              }
            }
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', parameters('spoke1NetworkName'))]"
      ]
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2020-12-01",
      "name": "[parameters('hubUbuntuName')]",
      "location": "[parameters('location')]",
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "osProfile": {
          "computerName": "[parameters('hubUbuntuName')]",
          "adminUsername": "[parameters('userName')]",
          "adminPassword": "[parameters('adminPassword')]",
          "linuxConfiguration": "[if(equals(parameters('authenticationType'), 'password'), null(), variables('linuxConfiguration'))]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "Canonical",
            "offer": "0001-com-ubuntu-server-focal",
            "sku": "[parameters('OSVersion')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "name",
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', 'Hub-vm-nic')]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": false
          }
        },
        "securityProfile": "[if(equals(parameters('securityType'), 'TrustedLaunch'), variables('securityProfileJson'), null())]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces', 'Hub-vm-nic')]"
      ]
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2020-12-01",
      "name": "[parameters('spokeUbuntuName')]",
      "location": "[parameters('location')]",
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "osProfile": {
          "computerName": "[parameters('spokeUbuntuName')]",
          "adminUsername": "[parameters('userName')]",
          "adminPassword": "[parameters('adminPassword')]",
          "linuxConfiguration": "[if(equals(parameters('authenticationType'), 'password'), null(), variables('linuxConfiguration'))]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "Canonical",
            "offer": "0001-com-ubuntu-server-focal",
            "sku": "[parameters('OSVersion')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "name",
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', 'Spoke-vm-nic')]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": false
          }
        },
        "securityProfile": "[if(equals(parameters('securityType'), 'TrustedLaunch'), variables('securityProfileJson'), null())]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces', 'Spoke-vm-nic')]"
      ]
    },
    {
      "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
      "apiVersion": "2020-07-01",
      "name": "[format('{0}/{1}', parameters('hubNetworkName'), 'Hub-to-Spoke')]",
      "properties": {
        "allowVirtualNetworkAccess": true,
        "allowForwardedTraffic": false,
        "allowGatewayTransit": false,
        "useRemoteGateways": false,
        "remoteVirtualNetwork": {
          "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('spoke1NetworkName'))]"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', parameters('hubNetworkName'))]",
        "[resourceId('Microsoft.Network/virtualNetworks', parameters('spoke1NetworkName'))]"
      ]
    },
    {
      "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
      "apiVersion": "2020-07-01",
      "name": "[format('{0}/{1}', parameters('spoke1NetworkName'), 'Spoke-to-Hub')]",
      "properties": {
        "allowVirtualNetworkAccess": true,
        "allowForwardedTraffic": false,
        "allowGatewayTransit": false,
        "useRemoteGateways": false,
        "remoteVirtualNetwork": {
          "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('hubNetworkName'))]"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', parameters('hubNetworkName'))]",
        "[resourceId('Microsoft.Network/virtualNetworks', parameters('spoke1NetworkName'))]"
      ]
    }
  ]
}